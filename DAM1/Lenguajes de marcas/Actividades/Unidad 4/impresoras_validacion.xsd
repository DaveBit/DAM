<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:element name="impresoras">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="impresora"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
<!--Arriba la cabecera y el enlace que referencia los standares xml. 
El elemento principal es impresoras, hemos utilizado complextype pues otros elementos van a ser utilizados dentro de impresoras. 
Como atributos de impresora  hemos establecido aqui maxOccurs en unbounded de modo que puedan haber tantos elementos "impresora" como sean necesarios. Este valor por defecto es 1. 
El numero minimo es por defecto 1. 
Hemos utilizado referencia para hacer el codigo mas limpio. 
El elemento impresora que define a continuacion. -->

  <xs:element name="impresora">
    <xs:complexType>
      <xs:sequence>

        <xs:element name="marca" type="xs:string" minOccurs="1" maxOccurs="1"/>

        <xs:element name="modelo" type="xs:string" minOccurs="1" maxOccurs="1"/>
            
        <xs:element name="peso" minOccurs="1" maxOccurs="1">
          <xs:simpleType>
              <xs:restriction base="xs:decimal">
                <xs:minExclusive value ="0.00"/>
                <xs:fractionDigits value="2"/>
              </xs:restriction> 
          </xs:simpleType>
        </xs:element>

        <xs:element name="tamaño" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
             
        <xs:element name="cartucho" minOccurs="1" maxOccurs="1">
            <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:pattern value="(C)(-)[0-9][0-9][0-9][A-Z][A-Z]?"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
            
        <xs:element name="enred" minOccurs="0"/> 
      </xs:sequence>
<!--En esta "seccion" se ha definido el elemento "impresora", usando la etiqueta complexType pues existen otros elementos y atributos dentro. 
Tambien se ha utilizado la etiqueta "sequence" pues es la que los elementos mostrados a continuacion deben seguir el order con el que se han declarado. 
A contiuacion explicamos los elementos y los atributos.
marca como tipo string pues es una cadena de texto, minino aparece una vez y maximo una vez tambien. 
Igual para modelo. 
Para peso hemos usado la restriccion de que sea un numero decimal, que este sea positivo con minExclusive, no hay producto que pese 0 y que tenga como mucho 2 digitos con fractionDigits. 
La etiqueta usada en este caso ha sido simpleType pues solo existe restriccion dentro. 
Tamano tiene unbounded como maxoccurs pues puede haber mas de uno. 
Cartucho sigue un patron que ha sido definido por pattern. De modo que el codigo sea una letra C un guion y por cada [] un numero entre 0-0 y letra entra A-Z, la ultima opcional.
El elemento enred es opcional, puede aparecer o no, para ello utilizamos minOccurs en 0, por defecto 1. -->

    <xs:attribute name="numSerie" use="required" type="xs:NCName"/>


    <xs:attribute name="tipo" use="required">
      <xs:simpleType>
         <xs:restriction base="xs:string">
            <xs:enumeration value="matricial"/>
             <xs:enumeration value="láser"/>
             <xs:enumeration value="tinta"/>
           </xs:restriction>
     </xs:simpleType>
    </xs:attribute>

    <xs:attribute name="compra" use="optional">
      <xs:simpleType>
        <xs:restriction base="xs:positiveInteger"/>
      </xs:simpleType>
    </xs:attribute>

<!-- en la parte superior se han definido los atributos. 
numSerie tiene que estar presente y debe de cumplir con ciertas condiciones que nos da el tipo NCName. En la web se detallan. 
Para tipo se ha establecido que solo pueda tener tres valores mediante la etiqueta "enumeration". 
Compra es un elemento opcional y ademas un valor positivo, para ello hemos usado la restriccion positiveInteger. -->

    </xs:complexType>
  </xs:element>

</xs:schema>
